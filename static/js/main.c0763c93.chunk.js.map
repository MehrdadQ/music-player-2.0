{"version":3,"sources":["Promise.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","utils/firebase.js","components/Nav.js","App.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","Player","currentSong","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnimation","transform","animationPercentage","className","currentTime","style","backgroundColor","colors","min","max","duration","value","type","onChange","e","target","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","title","artist","LibrarySong","Library","libraryStatus","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","AddModal","props","useState","setTitle","setArtist","setCover","setAudio","color1","setColor1","color2","setColor2","color3","setColor3","Modal","centered","Header","closeButton","Title","Body","Form","Group","Label","Control","Footer","Button","uuid","uid","set","ref","handleAdd","Nav","setLibraryStatus","show","setShow","href","faGithub","faMusic","faPlus","onHide","require","config","App","useRef","songNum","setSongNum","timeUpdateHandler","roundedCurrent","round","roundedDuration","animationPercentage2","songEndHandler","a","onValue","snapshot","data","val","Object","values","forEach","old","aa","console","log","transition","onTimeUpdate","onLoadedMetadata","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0763c93.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\r\n  if (isPlaying) {\r\n    const playPromise = audioRef.current.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise.then((audio) => {\r\n        audioRef.current.play();\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../Promise\";\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    audioRef.current.currentTime = e.target.value;\r\n  };\r\n\r\n  const skipTrackHandler = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    } else {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n      } else {\r\n        setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n    }\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"time-control\">\r\n        <p>{songInfo.currentTime ? getTime(songInfo.currentTime) : \"0:00\"}</p>\r\n        <div\r\n          className=\"track\"\r\n          style={{\r\n            backgroundColor: currentSong.colors[1],\r\n          }}\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            onChange={dragHandler}\r\n          />\r\n          <div className=\"animate-track\" style={trackAnimation}></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-b\"\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-f\"\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt=\"song cover\"></img>\r\n      <h2>{currentSong.title}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../Promise\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    setCurrentSong(song);\r\n\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n      onClick={songSelectHandler}\r\n    >\r\n      <img src={song.cover} alt=\"song cover\"></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.title}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  audioRef,\r\n  setSongs,\r\n  libraryStatus,\r\n  currentSong,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`library ${libraryStatus ? \"active-library\" : \"\"}`}\r\n      style={{\r\n        backgroundColor: currentSong.colors[2],\r\n      }}\r\n    >\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getDatabase(app);","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport {db} from \"../utils/firebase.js\";\r\nimport { useState } from \"react\";\r\nimport { set, ref } from \"firebase/database\"\r\nimport {uid} from \"uid\"\r\n\r\nconst AddModal = (props) => {\r\n  const [title, setTitle] = useState(\"\")\r\n  const [artist, setArtist] = useState(\"\")\r\n  const [cover, setCover] = useState(\"\")\r\n  const [audio, setAudio] = useState(\"\")\r\n  const [color1, setColor1] = useState(\"rgb(255, 255, 255)\")\r\n  const [color2, setColor2] = useState(\"rgb(0, 0, 0)\")\r\n  const [color3, setColor3] = useState(\"rgb(255, 255, 255)\")\r\n\r\n  const handleAdd = () => {\r\n    const uuid = uid()\r\n    const colors = [color1, color2, color3]\r\n    const song = {\r\n      title,\r\n      artist,\r\n      cover,\r\n      audio,\r\n      id: uuid,\r\n      colors\r\n    }\r\n    set(ref(db, uuid), song)\r\n    setTitle(\"\")\r\n    setArtist(\"\")\r\n    setCover(\"\")\r\n    setAudio(\"\")\r\n    setColor1(\"rgb(255, 255, 255)\")\r\n    setColor2(\"rgb(0, 0, 0)\")\r\n    setColor3(\"rgb(255, 255, 255)\")\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add new song\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Song title</Form.Label>\r\n            <Form.Control type=\"text\" value={title} \r\n            onChange={(e) => setTitle(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Artist</Form.Label>\r\n            <Form.Control type=\"text\" value={artist} \r\n            onChange={(e) => setArtist(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Cover photo link</Form.Label>\r\n            <Form.Control type=\"text\" value={cover} \r\n            onChange={(e) => setCover(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Audio link</Form.Label>\r\n            <Form.Control type=\"text\"  value={audio} \r\n            onChange={(e) => setAudio(e.target.value)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Color 1</Form.Label>\r\n            <Form.Control type=\"text\"  value={color1} \r\n            onChange={(e) => setColor1(e.target.value)}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Color 2</Form.Label>\r\n            <Form.Control type=\"text\"  value={color2} \r\n            onChange={(e) => setColor2(e.target.value)}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Color 3</Form.Label>\r\n            <Form.Control type=\"text\"  value={color3} \r\n            onChange={(e) => setColor3(e.target.value)}/>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => handleAdd()}>Add</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <a href=\"https://github.com/MehrdadQ/Music-Player\" target=\"blank\">\r\n          <FontAwesomeIcon icon={faGithub} size={\"2x\"} />\r\n        </a>\r\n        <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n          <FontAwesomeIcon icon={faMusic} size={\"2x\"} />\r\n        </button>\r\n        <button onClick={() => setShow(!show)}>\r\n          <FontAwesomeIcon icon={faPlus} size={\"2x\"} />\r\n        </button>\r\n      </nav>\r\n\r\n      <AddModal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport \"./styles/app.scss\";\r\n\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n\r\n// import data from \"./util\";\r\n\r\nimport { db } from \"./utils/firebase.js\";\r\nimport { ref, onValue } from \"firebase/database\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nfunction App() {\r\n  const audioRef = useRef(null);\r\n  const [songs, setSongs] = useState([]);\r\n  const [songNum, setSongNum] = useState(0)\r\n  const [currentSong, setCurrentSong] = useState({\r\n    title: \"Please Wait\",\r\n    artist: \"\",\r\n    cover: \"https://i1.sndcdn.com/artworks-000175930618-pg6ffe-t500x500.jpg\",\r\n    colors: [\"white\", \"white\", \"white\"],\r\n    audio: \"\",\r\n  });\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animationPercentage2 = Math.round(\r\n      (100 * roundedCurrent) / roundedDuration\r\n    );\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration: duration,\r\n      animationPercentage: animationPercentage2,\r\n    });\r\n  };\r\n\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onValue(ref(db), snapshot => {\r\n      setSongs([])\r\n      const data = snapshot.val()\r\n      if (data !== null) {\r\n        setSongNum(Object.values(data).length)\r\n        Object.values(data).forEach(song => {\r\n          setSongs(old => [...old, song])\r\n        })\r\n        // console.log(`songs length is ${songs.length}`)\r\n        // if (songs.length !== 0) {\r\n        //   setCurrentSong(songs[0])\r\n        // }\r\n      }\r\n    })\r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const aa = async (e) => {\r\n      await setCurrentSong(e)\r\n    }\r\n    // console.log(`songs.length is ${songs.length} and numSongs is ${songNum}`)\r\n    if (songs.length === songNum && songNum !== 0) {\r\n      console.log(songs[0])\r\n      // setCurrentSong(songs[0])\r\n      aa(songs[0])\r\n    }\r\n  }, [songs.length])\r\n\r\n  return (\r\n    <div\r\n      className=\"biggest\"\r\n      style={{\r\n        backgroundColor: currentSong.colors[0],\r\n        transition: \"all 0.5s ease\",\r\n      }}\r\n    >\r\n      <div\r\n        className={`App ${libraryStatus ? \"library-active\" : \"\"}`}\r\n        style={{\r\n          backgroundColor: currentSong.colors[0],\r\n        }}\r\n      >\r\n        <Nav\r\n          libraryStatus={libraryStatus}\r\n          setLibraryStatus={setLibraryStatus}\r\n        />\r\n        <Song currentSong={currentSong} />\r\n        <Player\r\n          audioRef={audioRef}\r\n          isPlaying={isPlaying}\r\n          setIsPlaying={setIsPlaying}\r\n          currentSong={currentSong}\r\n          setSongInfo={setSongInfo}\r\n          songInfo={songInfo}\r\n          songs={songs}\r\n          setCurrentSong={setCurrentSong}\r\n          setSongs={setSongs}\r\n        />\r\n        <Library\r\n          audioRef={audioRef}\r\n          isPlaying={isPlaying}\r\n          songs={songs}\r\n          setCurrentSong={setCurrentSong}\r\n          setSongs={setSongs}\r\n          libraryStatus={libraryStatus}\r\n          currentSong={currentSong}\r\n        />\r\n        <audio\r\n          onTimeUpdate={timeUpdateHandler}\r\n          onLoadedMetadata={timeUpdateHandler}\r\n          ref={audioRef}\r\n          src={currentSong.audio}\r\n          onEnded={songEndHandler}\r\n        ></audio>\r\n      </div>\r\n      <div\r\n        className=\"filler\"\r\n        style={{\r\n          backgroundColor: currentSong.colors[0],\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}